var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MatrixFuns","category":"page"},{"location":"#MatrixFuns","page":"Home","title":"MatrixFuns","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MatrixFuns.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MatrixFuns]","category":"page"},{"location":"#MatrixFuns.div_diff-Union{Tuple{T}, Tuple{Function, Vector{T}}} where T<:Real","page":"Home","title":"MatrixFuns.div_diff","text":"div_diff(f, x::Vector; kwargs...)\ndiv_diff(f, x::Tuple; kwargs...)\ndiv_diff(f, x...; kwargs...)\n\nReturn the divided difference f[x_0,x_1,...,x_n], assuming f is called as f(x). \n\n\n\n\n\n","category":"method"},{"location":"#MatrixFuns.mat_fun-Union{Tuple{TT}, Tuple{Function, AbstractMatrix{TT}}} where TT<:Number","page":"Home","title":"MatrixFuns.mat_fun","text":"mat_fun(f, A; sep, max_deg, scale, color, ε, checknative)\n\nCompute the matrix-variable function f(A). Return a matrix.\n\nf a general scalar function, and called as f(x).\n\nA an arbitrary square matrix.\n\nsep the initial separation distance, to split the eigenvalues of A into clusters that satisfy (i) min{|λ - μ|: λ ∈ clp, μ ∈ clq, p ≠ q} > sep.\t\t (ii) for clp with |clp| > 1, ∀ λ ∈ clp, ∃ μ ∈ clp and μ ≠ λ, s.t. |λ - μ| ≤ sep.  Here cl_p is the cluster with index p. When sep=Inf, the eigenvalues are only split by color.\n\nmax_deg the maximum Taylor series order for the diagonal blocks computation.\n\ntol_tay the termination tolerance for evaluating the Taylor series of diagonal blocks.\n\nscale the scaling of the Talyor series error, is used to control the spread of each splitting cluster. When scale=Inf, split the eigenvalues only once with sep.\n\ncolor(x::Number)::Integer an index mapping function.  This is to ensure all eigenvalues within a cluster have the same color index.  By default, the color function maps x to 1.  For discontinuous functions, users can assign a distinct color to each continuous segment.  E.g., for the sign function, users can customize the color mapping using  color = x -> Int(real(sign(x)))\n\nε the default error.\n\nchecknative check f is a Julia native function.\n\n\n\n\n\n","category":"method"},{"location":"#MatrixFuns.mat_fun_frechet-Union{Tuple{TT}, Tuple{Function, AbstractVector{<:Real}, AbstractMatrix, Vector{TT}}} where TT<:(AbstractMatrix)","page":"Home","title":"MatrixFuns.mat_fun_frechet","text":"mat_fun_frechet(f, eigs, Ψ::AbstractMatrix, h::Vector{AbstractMatrix})\nmat_fun_frechet(f, H::AbstractMatrix, h::Vector{AbstractMatrix})\n\nReturn the n-th order Fréchet derivative d^nf(H)h[1]…h[n], assuming f is called as f(x).\n\n\n\n\n\n","category":"method"}]
}
